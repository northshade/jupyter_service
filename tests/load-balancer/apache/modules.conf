# We need some basic modules
LoadModule auth_basic_module modules/mod_auth_basic.so
LoadModule authz_host_module modules/mod_authz_host.so
LoadModule log_config_module modules/mod_log_config.so
LoadModule logio_module modules/mod_logio.so
LoadModule env_module modules/mod_env.so
LoadModule mime_magic_module modules/mod_mime_magic.so
LoadModule setenvif_module modules/mod_setenvif.so
LoadModule mime_module modules/mod_mime.so
LoadModule vhost_alias_module modules/mod_vhost_alias.so
LoadModule dir_module modules/mod_dir.so
LoadModule actions_module modules/mod_actions.so
LoadModule alias_module modules/mod_alias.so
LoadModule rewrite_module modules/mod_rewrite.so
LoadModule cgi_module modules/mod_cgi.so

#LoadModule ssl_module modules/mod_ssl.so

# In Apache 2.4+ the MPM is explicitly selected through a module and a number
# of other modules are no longer automatically included.
# prefork MPM: Implements a non-threaded, pre-forking web server
# See: http://httpd.apache.org/docs/2.4/mod/prefork.html
LoadModule mpm_prefork_module modules/mod_mpm_prefork.so
# TODO: remove this backwards compatibility when all old access is migrated
#       more specifically wrap all allow/deny/Satisfy in IfVersion tags. This
#       is already done in httpd confs but all user htaccess files must follow.
LoadModule access_compat_module modules/mod_access_compat.so
# User and Group directives moved to unixd module
LoadModule unixd_module modules/mod_unixd.so
# AuthType directive requires authn core module
LoadModule authn_core_module modules/mod_authn_core.so
# Require directive requires authz core module
LoadModule authz_core_module modules/mod_authz_core.so
# The shmcb session cache requires socache shmcb module
LoadModule socache_shmcb_module modules/mod_socache_shmcb.so

# Version detection to dynamically switch between old and 2.4+ access control
LoadModule version_module modules/mod_version.so

# Optional WSGI if requested
#LoadModule wsgi_module modules/mod_wsgi.so

# Optional OpenID support if requested
# Please note that fully functional OpenID cert_redirect requires reverse
# (SSL) proxy - more details in vhost conf.
Â£LoadModule authopenid_module modules/mod_auth_openid.so
LoadModule proxy_module modules/mod_proxy.so
LoadModule proxy_http_module modules/mod_proxy_http.so

# Optional websockets proxy for ParaViewWeb and Jupyter if requested
LoadModule proxy_wstunnel_module modules/mod_proxy_wstunnel.so
# Optional proxy balancer for multiple Jupyter backend hosts
# Proxy Balancer requires the slotmem_shm module
LoadModule proxy_balancer_module modules/mod_proxy_balancer.so
LoadModule slotmem_shm_module modules/mod_slotmem_shm.so
LoadModule lbmethod_byrequests_module modules/mod_lbmethod_byrequests.so

# Log Forensic
LoadModule log_forensic_module modules/mod_log_forensic.so
LoadModule unique_id_module modules/mod_unique_id.so
ForensicLog logs/forensic_log
LogFormat "%{forensic-id}n \"%{HEADER_NAME}o\"" combined


# Optional Header mangling if requested (for HSTS)
LoadModule headers_module modules/mod_headers.so